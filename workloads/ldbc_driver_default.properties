# -------------------------------------
# -------------------------------------
# ----- LDBC Driver Configuration -----
# -------------------------------------
# -------------------------------------

# ***********************
# *** driver defaults ***
# ***********************

# show status during benchmark execution
status=false

# thread pool size to use for executing operation handlers
threadcount=2

# path specifying where to write the benchmark results file
resultfile=results.json

# time unit to use for measuring performance metrics (e.g., query response time)
# Supported time units: NANOSECONDS, MICROSECONDS, MILLISECONDS, SECONDS, MINUTES
timeunit=MILLISECONDS

# used to 'compress'/'stretch' durations between operation start times to increase/decrease benchmark load
# e.g. 2.0 = run benchmark 2x slower, 0.1 = run benchmark 10x faster
# IMPORTANT: also applied to gctdeltaduration, i.e., gctdeltaduration value will be compressed/stretched too
timecompressionratio=1.0

# minimum duration (in milliseconds) that separates any two dependent operations in the workload
# e.g. if minimum duration between any pair of dependent operations is 100ms, gctdeltaduration can be at most 100
# IMPORTANT: the value set here assumes a timecompressionratio of '1.0'
#            timecompressionratio will be applied to this configured value
#            e.g. if config has gctdeltaduration=100 & timecompressionratio=2.0, driver will set gctdeltaduration to 200
#            if you change timecompressionratio change gctdeltaduration proportionately
gctdeltaduration=1800000

# NOT USED AT PRESENT - reserved for distributed driver mode
# specifies the addresses of other driver processes, so they can find each other
peeridentifiers=[]

# tolerated duration (in milliseconds) that operation execution may be late by
# if driver can not execute an operation within toleratedexecutiondelay of its scheduled start time it will terminate
toleratedexecutiondelay=1800000

# enable validation that will check if the provided database implementation is correct
validatedatabase=false

# enable validation that will check if the provided workload implementation is correct
validateworkload=false

# calculate & display workload statistics (operation mix, etc.)
workloadstatistics=false

# sleep duration (ms) injected into busy wait loops (to reduce CPU consumption)
spinnerwaitduration=10

# ***************************************************************
# *** the following should be set by workload implementations ***
# ***************************************************************

# fully qualified class name of the Workload (class) implementation to execute
# e.g. com.ldbc.driver.workloads.ldbc.snb.interactive.LdbcSnbInteractiveWorkload
# workload=

# number of operations to generate during benchmark execution
# operationcount=

# ************************************************************************************
# *** the following should be set by vendor implementations for specific workloads ***
# ************************************************************************************

# fully qualified class name of the Db (class) implementation to execute
# e.g. com.ldbc.driver.workloads.ldbc.snb.interactive.db.NothingDb
# database=
